{"ast":null,"code":"var _jsxFileName = \"/home/chaima/platform-pfe/frontend/src/forgetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const verifyEmail = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:4000/verify-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setEmailVerified(true);\n        setMessage(\"Email vérifié. Veuillez entrer un nouveau mot de passe.\");\n      } else {\n        setMessage(data.message || \"Email non trouvé.\");\n      }\n    } catch (err) {\n      setMessage(\"Erreur serveur.\");\n    }\n  };\n  const updatePassword = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:4000/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message || \"Mot de passe mis à jour !\");\n    } catch (err) {\n      setMessage(\"Erreur lors de la mise à jour.\");\n    }\n  };\n  {/*  const handleSubmit = async (e) => {\n     e.preventDefault();\n     setMessage(\"\");\n      try {\n       const response = await fetch(\"http://localhost:4000/forgot-password\", {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\" },\n         body: JSON.stringify({ email }),\n       });\n        const data = await response.json();\n       setMessage(data.message || \"Vérifiez votre boîte mail.\");\n     } catch (err) {\n       setMessage(\"Erreur, veuillez réessayer.\");\n     }\n   };\n   */}\n  console.log(email);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mot de passe oubli\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), !emailVerified ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: verifyEmail,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Entrez votre email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"field_pass\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"V\\xE9rifier l'e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePassword,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Nouveau mot de passe\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        className: \"field_pass\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"R\\xE9initialiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"fsfmCIfm3GB4oakTHUfGzD9Idvo=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","emailVerified","setEmailVerified","newPassword","setNewPassword","verifyEmail","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","updatePassword","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/chaima/platform-pfe/frontend/src/forgetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./login.css\";\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n\n\n\n  const verifyEmail = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:4000/verify-email\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setEmailVerified(true);\n        setMessage(\"Email vérifié. Veuillez entrer un nouveau mot de passe.\");\n      } else {\n        setMessage(data.message || \"Email non trouvé.\");\n      }\n    } catch (err) {\n      setMessage(\"Erreur serveur.\");\n    }\n  };\n  const updatePassword = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:4000/reset-password\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, newPassword }),\n      });\n\n      const data = await response.json();\n      setMessage(data.message || \"Mot de passe mis à jour !\");\n    } catch (err) {\n      setMessage(\"Erreur lors de la mise à jour.\");\n    }\n  };\n{ /*  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:4000/forgot-password\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n      setMessage(data.message || \"Vérifiez votre boîte mail.\");\n    } catch (err) {\n      setMessage(\"Erreur, veuillez réessayer.\");\n    }\n  };\n*/ }\n\nconsole.log(email);\n  return (\n    <div className=\"forgot-password-container\">\n      <h2>Mot de passe oublié</h2>\n\t{!emailVerified ? (\n        <form onSubmit={verifyEmail}>\n          <input\n            type=\"email\"\n            placeholder=\"Entrez votre email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n\t    className=\"field_pass\"\n            required\n          />\n          <button type=\"submit\">Vérifier l'e-mail</button>\n        </form>\n        ) : (\n           <form onSubmit={updatePassword}>\n             <input\n               type=\"password\"\n               placeholder=\"Nouveau mot de passe\"\n               value={newPassword}\n               onChange={(e) => setNewPassword(e.target.value)}\n\t       className=\"field_pass\"\n               required\n           />\n             <button type=\"submit\">Réinitialiser</button>\n           </form>\n        )}\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}