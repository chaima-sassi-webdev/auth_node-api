{"ast":null,"code":"var _jsxFileName = \"/home/chaima/platform-pfe/frontend/signup-app/src/forgetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const verifyEmail = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/verify-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setEmailVerified(true);\n        setMessage(\"Email vérifié. Veuillez entrer un nouveau mot de passe.\");\n      } else {\n        setMessage(data.message || \"Email non trouvé.\");\n      }\n    } catch (err) {\n      setMessage(\"Erreur serveur.\");\n    }\n  };\n  const updatePassword = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message || \"Mot de passe mis à jour !\");\n    } catch (err) {\n      setMessage(\"Erreur lors de la mise à jour.\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/forgot-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message || \"Vérifiez votre boîte mail.\");\n    } catch (err) {\n      setMessage(\"Erreur, veuillez réessayer.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mot de passe oubli\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Entrez votre email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !emailVerified ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: verifyEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Entrez votre email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"V\\xE9rifier l'e-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updatePassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Nouveau mot de passe\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"R\\xE9initialiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"fsfmCIfm3GB4oakTHUfGzD9Idvo=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","emailVerified","setEmailVerified","newPassword","setNewPassword","verifyEmail","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","updatePassword","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/chaima/platform-pfe/frontend/signup-app/src/forgetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./login.css\";\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [emailVerified, setEmailVerified] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n\n\n\n  const verifyEmail = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/verify-email\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setEmailVerified(true);\n        setMessage(\"Email vérifié. Veuillez entrer un nouveau mot de passe.\");\n      } else {\n        setMessage(data.message || \"Email non trouvé.\");\n      }\n    } catch (err) {\n      setMessage(\"Erreur serveur.\");\n    }\n  };\n\n  const updatePassword = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/reset-password\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, newPassword }),\n      });\n\n      const data = await response.json();\n      setMessage(data.message || \"Mot de passe mis à jour !\");\n    } catch (err) {\n      setMessage(\"Erreur lors de la mise à jour.\");\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/forgot-password\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n      setMessage(data.message || \"Vérifiez votre boîte mail.\");\n    } catch (err) {\n      setMessage(\"Erreur, veuillez réessayer.\");\n    }\n  };\n\n  return (\n    <div className=\"forgot-password-container\">\n      <h2>Mot de passe oublié</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Entrez votre email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n\t{!emailVerified ? (\n        <form onSubmit={verifyEmail}>\n          <input\n            type=\"email\"\n            placeholder=\"Entrez votre email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Vérifier l'e-mail</button>\n        </form>\n        ) : (\n           <form onSubmit={updatePassword}>\n             <input\n               type=\"password\"\n               placeholder=\"Nouveau mot de passe\"\n               value={newPassword}\n               onChange={(e) => setNewPassword(e.target.value)}\n               required\n           />\n             <button type=\"submit\">Réinitialiser</button>\n           </form>\n        )}\n\n      {message && <p>{message}</p>}\n        <button type=\"submit\">Envoyer</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}