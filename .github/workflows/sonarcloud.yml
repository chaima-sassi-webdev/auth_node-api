name: SonarCloud

on:
  push:
    branches:
      - main 

jobs:
  sonarcloud:
    name: Analyse SonarCloud
    runs-on: ubuntu-latest
   
    steps:
      # Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Important pour l'historique Git
          fetch-depth: 0

      #Configuration de Java ( nécessaire pour le scanner Sonar)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17 
     
      #Vérification que le token est bien défini ( sans l'afficher)
      - name: Vérifier que SONAR_TOKEN est bien défini
        run: |
          if [ -z "$SONAR_TOKEN" ]; then
            echo "Le secret SONAR_TOKEN n'est bien défini ! "
            exit 1
          else
            echo "SONAR_TOKEN est bien défini."
          fi
       
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # (Optionnel) Installer les dépendances & lancer les tests pour générer le coverage 
      - name: Install dependencies & run tests
        run: |
          cd frontend
          npm ci
          npm run test -- --coverage
        env: 
          CI: true


      # Scanner SonarCloud     
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=chaima-sassi-webdev_auth_node-api
            -Dsonar.organization=chaima-sassi-webdev
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/*.test.ts
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info,backend/coverage/lcov.info

      # Nettoyage du cache Sonar (optionnel) mais utile parfois)

      - name: Clear Sonar Cache (optionnel)
        run: rm -rf ~/.sonar/cache
